{
  // you may set specific environment variables here
  // e.g "env": { "PATH": "$HOME/go/bin:$PATH" }
  // in values, $PATH and ${PATH} are replaced with
  // the corresponding environment(PATH) variable, if it exists.
  "env": {"GOPATH": "$HOME/go", "PATH": "$GOPATH/bin:$PATH" },
  // ipc_timeout sets the maximum amount of time time in seconds to wait for a blocking ipc call to MarGo.
  // Due to limitations in Sublime Text, fmt cannot be done without freezing Sublime Text.
  // If you use the `fmt_cmd` setting above with a command that is slow like `goimports` you should increase this value.
  "ipc_timeout": 10,
  "fmt_cmd": ["goimports", "-srcdir", "$_dir"],
  // enable comp-lint, this will effectively disable the live linter
  "comp_lint_enabled": true,
  // list of commands to run
  "comp_lint_commands": [
      // run `golint` on all files in the package
      // "shell":true is required in order to run the command through your shell (to expand `*.go`)
      // also see: the documentation for the `shell` setting in the default settings file ctrl+dot,ctrl+4
      {"cmd": ["golint *.go"], "shell": true},
      // run go vet on the package
      {"cmd": ["go", "vet"]},
      // run `go install` on the package. GOBIN is set,
      // so `main` packages shouldn't result in the installation of a binary
      {"cmd": ["go", "install"]}
  ],
  "on_save": [
      // run comp-lint when you save,
      // naturally, you can also bind this command `gs_comp_lint`
      // to a key binding if you want
      //{"cmd": "gs_comp_lint"}
      {
        "cmd": "gs9o_open", "args": {
        "run": ["sh", 
            "go build . errors && go test -i && go test && go vet && golint ."],
        "focus_view": false
    }}
  ],
  "autocomplete_closures": true,
  "complete_builtins": true,
}